# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

image: khos2ow/ci-cd-tools:latest

# Define CI stages
stages:
  - test
  - integration
  - archive

# Global Variables
variables:
  GIT_DEPTH: "40"
  MAVEN_OPTS: '-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=INFO 
               -Dorg.slf4j.simpleLogger.showDateTime=true 
               -Djava.awt.headless=true 
               -Dmaven.repo.local=/root/.m2/repository'

# RAT checks
Audit:
  image:
    name: khos2ow/cloudstack-rpm-builder:centos7
    entrypoint: ["/bin/bash", "-l", "-c"]
  stage: test
  before_script:
    - environment-info.sh
  script:
    - mvn --activate-profiles developer,systemvm -Dsimulator --projects='org.apache.cloudstack:cloudstack' clean org.apache.rat:apache-rat-plugin:0.12:check

# Compile and test and verify build
Verify:
  image:
    name: khos2ow/cloudstack-rpm-builder:centos7
    entrypoint: ["/bin/bash", "-l", "-c"]
  stage: test
  before_script:
    - environment-info.sh
  script:
    - mvn --activate-profiles developer,systemvm -Dsimulator clean verify

# Run integration tests against live build
integration test:
  stage: integration
  when: manual
  before_script:
    - environment-info.sh
  script:
    - echo "TODO"
  except:
    - master
    - cca_custom_4.10jdk8

# Archive RPMs to object storage
RPM:
  image:
    name: khos2ow/cloudstack-rpm-builder:centos7
    entrypoint: ["/bin/bash", "-l", "-c"]
  stage: archive
  when: manual
  before_script:
    - environment-info.sh
    - pip install python-swiftclient
    - pip install python-keystoneclient
  script:
    # download required vhd-util file, if it doesn't exist
    - wget http://download.cloud.com.s3.amazonaws.com/tools/vhd-util --directory-prefix=${CI_PROJECT_DIR}/scripts/vm/hypervisor/xenserver

    # do the packaging and creating RPMs
    - /usr/local/bin/docker-entrypoint.sh --workspace-path ${CI_PROJECT_DIR} --distribution centos7 --use-timestamp

    # upload RPMs to swift object storage
    - |
      cat > openrc.sh << EOL
      export OS_USERNAME=cloudops-ccontini
      export OS_TENANT_NAME=cloudops-jenkins-swift
      export OS_PASSWORD=ubTQGjjPqEFOl9T4
      export OS_AUTH_URL=https://auth-qc.cloud.ca/v2.0
      export OS_REGION_NAME=east
      EOL

      source ${CI_PROJECT_DIR}/openrc.sh
      rm -f ${CI_PROJECT_DIR}/openrc.sh

      swift_path=""
      namespace="cloudstack"
      os_target="centos7"

      if [ "${CI_COMMIT_REF_NAME}" = "cca_custom_4.10jdk8" -a "${CI_PROJECT_NAMESPACE}" = "eng" ]; then
        version=$(mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)
        major_version=`echo ${version} | cut -d. -f1`.`echo ${version} | cut -d. -f2`

        case "$version" in
          *"-SNAPSHOT") stable_prefix="unstable" ;;
          *)            stable_prefix="stable"   ;;
        esac

        swift_path="${stable_prefix}/${major_version}/${os_target}"
      else
        swift_path="develop/${CI_PROJECT_NAMESPACE}/${CI_COMMIT_REF_NAME}"
      fi

      # upload to swift
      swift post ${namespace} -r '.r:*,.rlistings'
      swift upload ${namespace} --object-name ${swift_path} ${CI_PROJECT_DIR}/dist/rpmbuild/RPMS
  after_script:
    - |
      cat > openrc.sh << EOL
      export OS_USERNAME=cloudops-ccontini
      export OS_TENANT_NAME=cloudops-jenkins-swift
      export OS_PASSWORD=ubTQGjjPqEFOl9T4
      export OS_AUTH_URL=https://auth-qc.cloud.ca/v2.0
      export OS_REGION_NAME=east
      EOL

      source ${CI_PROJECT_DIR}/openrc.sh
      rm -f ${CI_PROJECT_DIR}/openrc.sh

      version=$(mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)
      major_version=`echo ${version} | cut -d. -f1`.`echo ${version} | cut -d. -f2`
      namespace="cloudstack"
      os_target="centos7"
      workdir=""

      case "$version" in
        *"-SNAPSHOT") stable_prefix="unstable" ;;
        *)            stable_prefix="stable"   ;;
      esac

      mkdir -p ${CI_PROJECT_DIR}/target/rpms

      # processing push to branch
      if [ "${CI_COMMIT_REF_NAME}" = "cca_custom_4.10jdk8" -a "${CI_PROJECT_NAMESPACE}" = "eng" ]; then
        workdir="${stable_prefix}/${major_version}/${os_target}"
      else 
        workdir="develop/${CI_PROJECT_NAMESPACE}/${CI_COMMIT_REF_NAME}"
      fi

      if [ -n "${workdir}" ]; then
        swift download ${namespace} --prefix ${workdir} --output-dir=${CI_PROJECT_DIR}/target/rpms
        createrepo --update ${CI_PROJECT_DIR}/target/rpms/${workdir}
        swift delete ${namespace} --prefix ${workdir}/repodata
        swift upload ${namespace} --object-name ${workdir}/repodata/ ${CI_PROJECT_DIR}/target/rpms/${workdir}/repodata/
      fi

# Archive SystemVM Template to object storage
SysVM Template:
  image:
    name: khos2ow/cloudstack-rpm-builder:centos7
    entrypoint: ["/bin/bash", "-l", "-c"]
  stage: archive
  when: manual
  before_script:
    - environment-info.sh
  script:
    - echo "TODO"
  except:
    - master
